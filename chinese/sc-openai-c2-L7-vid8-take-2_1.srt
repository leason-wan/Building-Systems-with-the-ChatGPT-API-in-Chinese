1
00:00:00,000 --> 00:00:08,160
在这个视频中，我们将把之前学到的所有内容整合起来，创建一个端到端的客服助手的示例。

2
00:00:08,160 --> 00:00:11,200
我们将按照以下步骤进行。

3
00:00:11,200 --> 00:00:12,520
首先，我们将检查输入，看看它是否标记了审核API。

4
00:00:12,520 --> 00:00:16,160
其次，如果没有，我们将提取产品列表。

5
00:00:16,160 --> 00:00:20,000
第三，如果找到了产品，我们将尝试查找它们。

6
00:00:20,000 --> 00:00:23,280
第四，我们将使用模型回答用户问题。

7
00:00:23,280 --> 00:00:26,880
最后，我们将通过审核API对答案进行审核。

8
00:00:26,880 --> 00:00:30,440
如果没有被标记，我们将把答案返回给用户。

9
00:00:30,440 --> 00:00:34,760
所以我们有了设置。

10
00:00:34,760 --> 00:00:36,840
我们有这些额外的导入。

11
00:00:36,840 --> 00:00:39,320
这是一个用于聊天机器人UI的Python包。

12
00:00:39,320 --> 00:00:47,260
所以我要粘贴一个处理用户消息的函数。

13
00:00:47,260 --> 00:00:51,800
然后我会先运行一个示例，然后我们会讨论这个函数。

14
00:00:51,800 --> 00:00:56,520
我们有我们一直在使用的用户输入。

15
00:00:56,520 --> 00:01:01,960
告诉我关于Smart X Pro手机和相机的信息。

16
00:01:01,960 --> 00:01:05,120
还要告诉我关于电视的信息。

17
00:01:05,120 --> 00:01:06,840
那么让我们运行它。

18
00:01:06,840 --> 00:01:07,840
首先，让我们运行它。

19
00:01:07,840 --> 00:01:12,680
正如您所看到的，我们正在按照步骤回答用户的问题。

20
00:01:12,680 --> 00:01:20,720
因此，第一步是审核步骤，第二步是提取产品列表。

21
00:01:20,720 --> 00:01:27,520
第三步是查找产品信息。

22
00:01:27,520 --> 00:01:31,920
 
23
00:01:31,920 --> 00:01:39,560
现在，有了这个产品信息，模型正在尝试回答问题，

24
00:01:39,560 --> 00:01:46,400
正如我们在之前的视频中所看到的。

25
00:01:46,400 --> 00:01:51,880
最后，它再次通过审核API对响应进行审核，以确保它是

26
00:01:51,880 --> 00:01:53,720
安全向用户展示的。

27
00:01:53,720 --> 00:01:58,160
这就是我们现在熟悉的响应。

28
00:01:58,160 --> 00:02:01,840
让我们来谈谈正在发生的事情。

29
00:02:01,840 --> 00:02:09,480
所以我们有一个帮助函数process user message。

30
00:02:09,480 --> 00:02:15,660
接收用户输入，即当前消息和所有消息的数组

31
00:02:15,660 --> 00:02:16,660
到目前为止。

32
00:02:16,660 --> 00:02:18,880
这是我们构建聊天机器人UI的时候。

33
00:02:18,880 --> 00:02:23,320
第一步，检查输入是否标记了审核API。

34
00:02:23,320 --> 00:02:25,640
我们在之前的视频中介绍过这个。

35
00:02:25,640 --> 00:02:32,320
如果输入被标记，那么我们告诉用户我们无法处理请求。

36
00:02:32,320 --> 00:02:36,720
如果没有被标记，我们尝试提取产品列表，就像在之前的

37
00:02:36,720 --> 00:02:37,880
视频中一样。

38
00:02:37,880 --> 00:02:40,840
然后我们尝试查找产品。

39
00:02:40,840 --> 00:02:45,400
在这种情况下，如果没有找到产品，这将只是一个空字符串。

40
00:02:45,400 --> 00:02:47,140
然后我们回答用户的问题。

41
00:02:47,140 --> 00:02:52,060
所以我们提供了与相关产品信息的对话历史记录和新消息。

42
00:02:52,060 --> 00:02:54,400
所以我们得到了响应。

43
00:02:54,400 --> 00:02:58,400
然后我们将这个响应通过审核API运行。

44
00:02:58,400 --> 00:03:04,200
如果被标记，我们告诉用户我们无法提供这些信息。
 
45
00:03:04,200 --> 00:03:06,760
也许我们会说些什么，让我为您连接。

46
00:03:06,760 --> 00:03:09,360
然后您可以采取一些后续步骤。

47
00:03:09,360 --> 00:03:15,600
因此，让我们将所有内容与漂亮的UI结合起来，尝试进行对话。

48
00:03:15,600 --> 00:03:20,760
因此，这里有一个函数，它将随着我们与助手的交互而累积消息。

49
00:03:20,760 --> 00:03:22,240
可以随意暂停视频，以更详细地了解其工作原理。

50
00:03:22,240 --> 00:03:27,000
当然，也可以对我们刚刚看到的非常长的处理用户消息函数进行相同的操作。

51
00:03:27,000 --> 00:03:31,200
现在，我们将粘贴我们的代码以显示聊天机器人UI。

52
00:03:31,200 --> 00:03:33,600
如果我们运行这个，现在让我们尝试与客服助手进行对话。

53
00:03:33,600 --> 00:03:40,100
所以让我们问一下，你们有哪些电视？

54
00:03:40,100 --> 00:03:46,800
在幕后，助手正在执行处理用户消息函数中的所有步骤。

55
00:03:46,800 --> 00:03:54,240
所以让我们问一下，哪个是最便宜的？

56
00:03:54,240 --> 00:03:58,480
再次执行所有相同的步骤，但这次将对话历史记录传递到提示中。

57
00:03:58,480 --> 00:04:00,860
好的，它告诉我们这个扬声器是我们拥有的最便宜的电视相关产品。

58
00:04:00,860 --> 00:04:03,980
有趣。

59
00:04:03,980 --> 00:04:08,440
让我们看看最贵的是什么。

60
00:04:08,440 --> 00:04:15,880
所以最昂贵的电视是Cineview 8K电视。

61
00:04:15,880 --> 00:04:20,720
所以让我们要求更多关于它的信息。

62
00:04:20,720 --> 00:04:26,960
告诉我更多关于它的信息。

63
00:04:26,960 --> 00:04:27,960
有趣。

64
00:04:27,960 --> 00:04:36,220
让我们看看最贵的是什么。

65
00:04:36,220 --> 00:04:40,840
所以最昂贵的电视是Cineview 8K电视。

66
00:04:40,840 --> 00:04:43,420
所以让我们要求更多关于它的信息。

67
00:04:43,420 --> 00:04:46,640
告诉我更多关于它的信息。
 
68
00:04:46,640 --> 00:04:54,860
因此，我们收到了有关这台电视的更多信息。

69
00:04:54,860 --> 00:05:00,460
在这个例子中，我们结合了课程中学到的技术，创建了一个综合系统，其中包含一系列步骤，评估用户输入，处理它们，

70
00:05:00,460 --> 00:05:05,700
然后检查输出。

71
00:05:05,700 --> 00:05:07,620
通过监控系统在更多输入上的质量，您可以修改步骤，提高系统的整体性能。

72
00:05:07,620 --> 00:05:11,820
也许我们会发现，对于某些步骤，我们的提示可能更好，也许有些步骤甚至不必要。

73
00:05:11,820 --> 00:05:15,300
也许我们会找到更好的检索方法等等。

74
00:05:15,300 --> 00:05:19,300
我们将在下一个视频中进一步讨论这个问题。 

75
00:05:19,300 --> 00:05:21,380
 

76
00:05:21,380 --> 00:05:25,020
 

77
00:05:25,020 --> 00:05:52,380
