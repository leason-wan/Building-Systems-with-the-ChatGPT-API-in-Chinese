1
00:00:00,000 --> 00:00:04,880
欢迎来到使用ChatGPT API构建系统的课程。

2
00:00:04,880 --> 00:00:09,920
之前，Ezra和我曾经介绍过如何使用ChatGPT。

3
00:00:09,920 --> 00:00:16,160
但是，该系统需要更多的内容，而不仅仅是一个单一的提示或单一的LLM或大型语言模型调用。

4
00:00:16,160 --> 00:00:23,680
在这个短期课程中，我们想与您分享使用LLM构建复杂应用程序的最佳实践。

5
00:00:23,680 --> 00:00:28,000
我们使用构建端到端客户服务助手系统的运行示例

6
00:00:28,000 --> 00:00:33,840
这需要使用不同的指令链式调用语言模型，具体取决于上一个调用的输出，

7
00:00:33,840 --> 00:00:36,960
有时甚至需要从外部来源查找信息。

8
00:00:36,960 --> 00:00:42,000
例如，给定用户输入，如告诉我有哪些电视出售，

9
00:00:42,000 --> 00:00:44,960
我们将使用以下步骤来处理此输入。

10
00:00:44,960 --> 00:00:49,920
首先，您可以评估输入，以确保它不包含任何问题内容，

11
00:00:49,920 --> 00:00:52,320
例如令人讨厌的言论。

12
00:00:52,320 --> 00:00:54,720
接下来，系统将处理输入。

13
00:00:54,720 --> 00:01:00,400
它将确定这是什么类型的查询，是投诉还是产品信息请求等。

14
00:01:00,400 --> 00:01:03,360
一旦确定这是产品查询，

15
00:01:03,360 --> 00:01:09,360
它将检索有关电视的相关信息，并使用语言模型编写有用的响应。

16
00:01:09,360 --> 00:01:15,520
最后，您将检查输出，以确保它不会出现问题，例如不准确或不适当的答案。

17
00:01:15,520 --> 00:01:23,280
本课程中您将看到一个主题，即应用程序通常需要多个对于最终用户不可见的内部步骤。
 
18
00:01:23,280 --> 00:01:31,520
您经常希望按顺序处理用户输入的多个步骤，以获得最终输出，然后向用户显示。

19
00:01:31,520 --> 00:01:39,520
随着您使用LLMs构建复杂系统，长期来看，您还希望不断改进系统。

20
00:01:39,520 --> 00:01:44,560
因此，我还将与您分享开发基于LLM的应用程序的过程，

21
00:01:44,560 --> 00:01:49,600
以及评估和改进系统的一些最佳实践。

22
00:01:49,600 --> 00:01:54,000
我们感谢许多为这个短期课程做出贡献的人。

23
00:01:54,000 --> 00:02:02,000
在OpenAI方面，我们感谢Andrew Kondrick、Joe Palermo、Boris Power和Ted Sanders。

24
00:02:02,000 --> 00:02:09,280
来自DeepLearning.ai团队的Jeff Ludwig、Eddie Hsu和Tommy Nelson也感谢您。

25
00:02:09,280 --> 00:02:14,720
通过这个短期课程，我们希望您能够自信地构建复杂的多步应用程序，

26
00:02:14,720 --> 00:02:18,080
并且可以维护和不断改进它。

27
00:02:18,080 --> 00:02:20,080
让我们开始吧。