1
00:00:00,000 --> 00:00:04,880
Welcome to this course on building systems using the ChatGPT API.

2
00:00:04,880 --> 00:00:09,920
Previously, Ezra and I had presented a course on how to prompt ChatGPT.

3
00:00:09,920 --> 00:00:16,160
But the system requires much more than a single prompt or a single call to an LLM or large language model.

4
00:00:16,160 --> 00:00:23,680
In this short course, we'd like to share with you best practices for building a complex application using an LLM.

5
00:00:23,680 --> 00:00:28,000
We use the running example of building an end-to-end customer service assistant system

6
00:00:28,000 --> 00:00:33,840
that chains multiple calls to a language model using different instructions depending on the output of the previous call,

7
00:00:33,840 --> 00:00:36,960
and sometimes even looking things up from external sources.

8
00:00:36,960 --> 00:00:42,000
So for example, given a user input like, tell me about what TVs are for sale,

9
00:00:42,000 --> 00:00:44,960
we'd use the following steps to process this.

10
00:00:44,960 --> 00:00:49,920
First, you can evaluate the input to make sure it doesn't contain any problematic content,

11
00:00:49,920 --> 00:00:52,320
such as hateful speech.

12
00:00:52,320 --> 00:00:54,720
Next, the system will process the input.

13
00:00:54,720 --> 00:01:00,400
It will identify what type of query this is, is it a complaint or a product information request, and so on.

14
00:01:00,400 --> 00:01:03,360
Once it has established that it is a product inquiry,

15
00:01:03,360 --> 00:01:09,360
it will retrieve the relevant information about TVs and use a language model to write a helpful response.

16
00:01:09,360 --> 00:01:15,520
Finally, you'll check the output to make sure it isn't problematic, such as inaccurate or inappropriate answers.

17
00:01:15,520 --> 00:01:23,280
One theme you see throughout this course is that an application often needs multiple internal steps that are invisible to the end user.

18
00:01:23,280 --> 00:01:31,520
You often want to sequentially process the user input in multiple steps to get to the final output that is then shown to the user.

19
00:01:31,520 --> 00:01:39,520
And as you build complex systems using LLMs, over the long term, you often want to also keep on improving the system.

20
00:01:39,520 --> 00:01:44,560
So I'll also share with you what the process of developing an LLM-based application feels like,

21
00:01:44,560 --> 00:01:49,600
and some best practices for evaluating and improving a system over time.

22
00:01:49,600 --> 00:01:54,000
We're grateful to many people that have contributed to this short course.

23
00:01:54,000 --> 00:02:02,000
On the OpenAI side, we're grateful to Andrew Kondrick, Joe Palermo, Boris Power, and Ted Sanders.

24
00:02:02,000 --> 00:02:09,280
And from the DeepLearning.ai team, thank you also to Jeff Ludwig, Eddie Hsu, and Tommy Nelson.

25
00:02:09,280 --> 00:02:14,720
Through this short course, we hope you'll come away confident in your abilities to build a complex, multi-step application,

26
00:02:14,720 --> 00:02:18,080
and also be set up to maintain and keep on improving it.

27
00:02:18,080 --> 00:02:20,080
Let's dive in.


